apiVersion: batch/v1
kind: CronJob
metadata:
  name: s3-analyzer
  namespace: s3-analyzer
spec:
  schedule: "0 0 * * 0"  # Runs every Sunday at midnight UTC
  jobTemplate:
    spec:
      template:
        spec:
          serviceAccountName: s3-analyzer-sa  # Ensure this SA has IAM permissions
          restartPolicy: Never
          containers:
          - name: iam-analyzer
            image: amazon/aws-cli:latest
            command:
              - /bin/sh
              - -c
              - |
                echo "Running AWS IAM Access Analyzer..."

                # Run the analyzer to list public buckets
                aws accessanalyzer list-findings \
                  --analyzer-arn "$ANALYZER_ARN" \
                  --filter '{"resourceType": {"eq": ["AWS::S3::Bucket"]}, "isPublic": {"eq": ["true"]}}' \
                  --region us-east-1 \
                  --query "findings[*].resource" > findings.json

                # Send findings to Slack if there are public buckets
                if [ -s findings.json ]; then
                  # install jq
                  yum install -y jq
                  jq --version
                  
                  export BUCKETS=$(cat findings.json | jq -r '. | join("\n")')
                  echo "\nPublic buckets discovered: $BUCKETS\nSending results to Slack..."

                  curl -X POST -H 'Content-type: application/json' \
                    --data "{\"text\": \"AWS IAM Access Analyzer detected public S3 buckets:\n$BUCKETS\"}" \
                    $SLACK_WEBHOOK_URL
                else
                  echo "No public S3 Buckets found."
                fi
            env:
              - name: AWS_REGION
                value: "us-east-1"
              - name: SLACK_WEBHOOK_URL
                valueFrom:
                  secretKeyRef:
                    name: slack-webhook
                    key: url  # Store your Slack webhook in a Kubernetes Secret
              - name: ANALYZER_ARN
                valueFrom:
                  secretKeyRef:
                    name: analyzer-arn
                    key: arn # Store your analyzer's arn in a Kubernetes Secret
              
